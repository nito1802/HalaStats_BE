// <auto-generated />
using System;
using HalaStats_BE.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HalaStats_BE.Database.Migrations
{
    [DbContext(typeof(HalaStatsDbContext))]
    partial class HalaStatsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("HalaStats")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HalaStats_BE.Database.Entities.EloRatingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlayerEntityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId");

                    b.ToTable("EloRatingEntity", "HalaStats");
                });

            modelBuilder.Entity("HalaStats_BE.Database.Entities.MatchEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MatchScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SkarbnikId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MatchScheduleId");

                    b.ToTable("Matches", "HalaStats");
                });

            modelBuilder.Entity("HalaStats_BE.Database.Entities.MatchScheduleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SkarbnikId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MatchSchedules", "HalaStats");
                });

            modelBuilder.Entity("HalaStats_BE.Database.Entities.PlayerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Players", "HalaStats");
                });

            modelBuilder.Entity("HalaStats_BE.Database.Entities.EloRatingEntity", b =>
                {
                    b.HasOne("HalaStats_BE.Database.Entities.PlayerEntity", null)
                        .WithMany("Ratings")
                        .HasForeignKey("PlayerEntityId");
                });

            modelBuilder.Entity("HalaStats_BE.Database.Entities.MatchEntity", b =>
                {
                    b.HasOne("HalaStats_BE.Database.Entities.MatchScheduleEntity", "MatchSchedule")
                        .WithMany("Matches")
                        .HasForeignKey("MatchScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("HalaStats_BE.Database.ValueObjects.MatchTeamValueObject", "TeamA", b1 =>
                        {
                            b1.Property<int>("MatchEntityId")
                                .HasColumnType("int");

                            b1.Property<int>("Goals")
                                .HasColumnType("int");

                            b1.Property<int>("Handicup")
                                .HasColumnType("int");

                            b1.Property<string>("HandicupReason")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TeamName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TeamRating")
                                .HasColumnType("int");

                            b1.HasKey("MatchEntityId");

                            b1.ToTable("Matches", "HalaStats");

                            b1.WithOwner()
                                .HasForeignKey("MatchEntityId");

                            b1.OwnsMany("HalaStats_BE.Database.ValueObjects.PlayerValueObject", "Players", b2 =>
                                {
                                    b2.Property<int>("TeamA_MatchId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<int>("Difference")
                                        .HasColumnType("int");

                                    b2.Property<string>("PlayerId")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("Rating")
                                        .HasColumnType("int");

                                    b2.HasKey("TeamA_MatchId", "Id");

                                    b2.ToTable("Matches_TeamA_Players", "HalaStats");

                                    b2.WithOwner()
                                        .HasForeignKey("TeamA_MatchId");
                                });

                            b1.Navigation("Players");
                        });

                    b.OwnsOne("HalaStats_BE.Database.ValueObjects.MatchTeamValueObject", "TeamB", b1 =>
                        {
                            b1.Property<int>("MatchEntityId")
                                .HasColumnType("int");

                            b1.Property<int>("Goals")
                                .HasColumnType("int");

                            b1.Property<int>("Handicup")
                                .HasColumnType("int");

                            b1.Property<string>("HandicupReason")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TeamName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TeamRating")
                                .HasColumnType("int");

                            b1.HasKey("MatchEntityId");

                            b1.ToTable("Matches", "HalaStats");

                            b1.WithOwner()
                                .HasForeignKey("MatchEntityId");

                            b1.OwnsMany("HalaStats_BE.Database.ValueObjects.PlayerValueObject", "Players", b2 =>
                                {
                                    b2.Property<int>("TeamB_MatchId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<int>("Difference")
                                        .HasColumnType("int");

                                    b2.Property<string>("PlayerId")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("Rating")
                                        .HasColumnType("int");

                                    b2.HasKey("TeamB_MatchId", "Id");

                                    b2.ToTable("Matches_TeamB_Players", "HalaStats");

                                    b2.WithOwner()
                                        .HasForeignKey("TeamB_MatchId");
                                });

                            b1.Navigation("Players");
                        });

                    b.Navigation("MatchSchedule");

                    b.Navigation("TeamA")
                        .IsRequired();

                    b.Navigation("TeamB")
                        .IsRequired();
                });

            modelBuilder.Entity("HalaStats_BE.Database.Entities.MatchScheduleEntity", b =>
                {
                    b.OwnsOne("HalaStats_BE.Database.ValueObjects.MatchTeamValueObject", "TeamA", b1 =>
                        {
                            b1.Property<int>("MatchScheduleEntityId")
                                .HasColumnType("int");

                            b1.Property<int>("Goals")
                                .HasColumnType("int");

                            b1.Property<int>("Handicup")
                                .HasColumnType("int");

                            b1.Property<string>("HandicupReason")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TeamName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TeamRating")
                                .HasColumnType("int");

                            b1.HasKey("MatchScheduleEntityId");

                            b1.ToTable("MatchSchedules", "HalaStats");

                            b1.WithOwner()
                                .HasForeignKey("MatchScheduleEntityId");

                            b1.OwnsMany("HalaStats_BE.Database.ValueObjects.PlayerValueObject", "Players", b2 =>
                                {
                                    b2.Property<int>("TeamA_MatchScheduleId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<int>("Difference")
                                        .HasColumnType("int");

                                    b2.Property<string>("PlayerId")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("Rating")
                                        .HasColumnType("int");

                                    b2.HasKey("TeamA_MatchScheduleId", "Id");

                                    b2.ToTable("MatchSchedules_TeamA_Players", "HalaStats");

                                    b2.WithOwner()
                                        .HasForeignKey("TeamA_MatchScheduleId");
                                });

                            b1.Navigation("Players");
                        });

                    b.OwnsOne("HalaStats_BE.Database.ValueObjects.MatchTeamValueObject", "TeamB", b1 =>
                        {
                            b1.Property<int>("MatchScheduleEntityId")
                                .HasColumnType("int");

                            b1.Property<int>("Goals")
                                .HasColumnType("int");

                            b1.Property<int>("Handicup")
                                .HasColumnType("int");

                            b1.Property<string>("HandicupReason")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TeamName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TeamRating")
                                .HasColumnType("int");

                            b1.HasKey("MatchScheduleEntityId");

                            b1.ToTable("MatchSchedules", "HalaStats");

                            b1.WithOwner()
                                .HasForeignKey("MatchScheduleEntityId");

                            b1.OwnsMany("HalaStats_BE.Database.ValueObjects.PlayerValueObject", "Players", b2 =>
                                {
                                    b2.Property<int>("TeamB_MatchScheduleId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<int>("Difference")
                                        .HasColumnType("int");

                                    b2.Property<string>("PlayerId")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("Rating")
                                        .HasColumnType("int");

                                    b2.HasKey("TeamB_MatchScheduleId", "Id");

                                    b2.ToTable("MatchSchedules_TeamB_Players", "HalaStats");

                                    b2.WithOwner()
                                        .HasForeignKey("TeamB_MatchScheduleId");
                                });

                            b1.Navigation("Players");
                        });

                    b.Navigation("TeamA");

                    b.Navigation("TeamB");
                });

            modelBuilder.Entity("HalaStats_BE.Database.Entities.MatchScheduleEntity", b =>
                {
                    b.Navigation("Matches");
                });

            modelBuilder.Entity("HalaStats_BE.Database.Entities.PlayerEntity", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
